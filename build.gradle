buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 所有模块/项目的通用配置
allprojects {
    group 'cn.xuhu.cloud'
    version '1.0-SNAPSHOT'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    // 指定JDK版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // 指定编码格式
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        mavenLocal()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }

    ext {//依赖版本
        springBootVersion = "2.1.6.RELEASE"
        springCloudVersion = "Finchley.SR2"
        lombokVersion = "1.18.8"
        junitVersion = "4.12"
        jedisVersion = "2.9.0"
        myBatisPlusVersion = "3.1.2"
        apacheCommonsLangVersion = "3.9"
    }

    dependencyManagement {
        imports {
            mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }


    dependencies {
        compile "org.springframework.boot:spring-boot-starter"
        compile "org.springframework.boot:spring-boot-starter-web"
//        compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompile "junit:junit:${junitVersion}"
        compile "org.apache.commons:commons-lang3:${apacheCommonsLangVersion}"
    }


//    configurations {
//        //移除spring boot 默认logger依赖
//        all*.exclude module: 'spring-boot-starter-logging'
//    }
}